{
  "address": "0x76F2F7f46354D9Ccb64460086512f0C6c5dd4759",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountB",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x911f30ed786a9b28c7074ea6b9a80383416d0020a3ce46c45f640a675f30d7b6",
  "receipt": {
    "to": null,
    "from": "0x6beC61340fA6781cac9Cd039964E2067F4c1f468",
    "contractAddress": "0x76F2F7f46354D9Ccb64460086512f0C6c5dd4759",
    "transactionIndex": 59,
    "gasUsed": "374309",
    "logsBloom": "0x
    "blockHash": "0x9b55988c50516edf4d8eca26ba082b012a846400bf9849a51549d1c051ea97c3",
    "transactionHash": "0x911f30ed786a9b28c7074ea6b9a80383416d0020a3ce46c45f640a675f30d7b6",
    "logs": [],
    "blockNumber": 8366595,
    "cumulativeGasUsed": "19864254",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d113db3ee207a8d60020e53dae5e5bb6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Router.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Router.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity  ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IUniswapV2Router {\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n\\n     function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH, uint liquidity);\\n}\\n\\n\\ncontract Router {\\n    address private constant ROUTER = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\\n\\n    function addLiquidity(\\n        address _tokenA,\\n        address _tokenB,\\n        uint _amountA,\\n        uint _amountB\\n    ) external {\\n        IERC20(_tokenA).transferFrom(msg.sender, address(this), _amountA);\\n        IERC20(_tokenB).transferFrom(msg.sender, address(this), _amountB);\\n\\n        IERC20(_tokenA).approve(ROUTER, _amountA);\\n        IERC20(_tokenB).approve(ROUTER, _amountB);\\n\\n        IUniswapV2Router(ROUTER)\\n            .addLiquidity(\\n                _tokenA,\\n                _tokenB,\\n                _amountA,\\n                _amountB,\\n                1,\\n                1,\\n                address(this),\\n                block.timestamp\\n            );\\n    }\\n\\n    function addLiquidityETH(\\n        address _token,\\n        uint _amount\\n    ) external payable {\\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\\n\\n        IERC20(_token).approve(ROUTER, _amount);\\n\\n        IUniswapV2Router(ROUTER)\\n            .addLiquidityETH(\\n                _token,\\n                _amount,\\n                1,\\n                1,\\n                address(this),\\n                block.timestamp\\n            );\\n    }\\n\\n}\\n\",\"keccak256\":\"0x8826cb88e61586f215122538b45c29ee68a808d4b7b55fcc65db16f8ea610a8f\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105cf806100206000396000f3fe6080604052600436106100295760003560e01c80637282d5481461002e578063cf6c62ea14610043575b600080fd5b61004161003c3660046104d6565b610063565b005b34801561004f57600080fd5b5061004161005e366004610500565b610207565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af11580156100b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100da9190610542565b5060405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152602481018290526001600160a01b0383169063095ea7b3906044016020604051808303816000875af115801561013c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101609190610542565b5060405163f305d71960e01b81526001600160a01b03831660048201526024810182905260016044820181905260648201523060848201524260a4820152737a250d5630b4cf539739df2c5dacb4c659f2488d9063f305d7199060c4016060604051808303816000875af11580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610200919061056b565b5050505050565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af115801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190610542565b506040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610542565b5060405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152602481018390526001600160a01b0385169063095ea7b3906044016020604051808303816000875af1158015610358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037c9190610542565b5060405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152602481018290526001600160a01b0384169063095ea7b3906044016020604051808303816000875af11580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190610542565b5060405162e8e33760e81b81526001600160a01b03808616600483015284166024820152604481018390526064810182905260016084820181905260a48201523060c48201524260e4820152737a250d5630b4cf539739df2c5dacb4c659f2488d9063e8e3370090610104016060604051808303816000875af115801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b1919061056b565b50505050505050565b80356001600160a01b03811681146104d157600080fd5b919050565b600080604083850312156104e957600080fd5b6104f2836104ba565b946020939093013593505050565b6000806000806080858703121561051657600080fd5b61051f856104ba565b935061052d602086016104ba565b93969395505050506040820135916060013590565b60006020828403121561055457600080fd5b8151801515811461056457600080fd5b9392505050565b60008060006060848603121561058057600080fd5b835192506020840151915060408401519050925092509256fea2646970667358221220e64749fe7b8d7ab896cc1bac129dfeeb1a31992b1bfe5a3c3178309f56d568b664736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c80637282d5481461002e578063cf6c62ea14610043575b600080fd5b61004161003c3660046104d6565b610063565b005b34801561004f57600080fd5b5061004161005e366004610500565b610207565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af11580156100b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100da9190610542565b5060405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152602481018290526001600160a01b0383169063095ea7b3906044016020604051808303816000875af115801561013c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101609190610542565b5060405163f305d71960e01b81526001600160a01b03831660048201526024810182905260016044820181905260648201523060848201524260a4820152737a250d5630b4cf539739df2c5dacb4c659f2488d9063f305d7199060c4016060604051808303816000875af11580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610200919061056b565b5050505050565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af115801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190610542565b506040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610542565b5060405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152602481018390526001600160a01b0385169063095ea7b3906044016020604051808303816000875af1158015610358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037c9190610542565b5060405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152602481018290526001600160a01b0384169063095ea7b3906044016020604051808303816000875af11580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190610542565b5060405162e8e33760e81b81526001600160a01b03808616600483015284166024820152604481018390526064810182905260016084820181905260a48201523060c48201524260e4820152737a250d5630b4cf539739df2c5dacb4c659f2488d9063e8e3370090610104016060604051808303816000875af115801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b1919061056b565b50505050505050565b80356001600160a01b03811681146104d157600080fd5b919050565b600080604083850312156104e957600080fd5b6104f2836104ba565b946020939093013593505050565b6000806000806080858703121561051657600080fd5b61051f856104ba565b935061052d602086016104ba565b93969395505050506040820135916060013590565b60006020828403121561055457600080fd5b8151801515811461056457600080fd5b9392505050565b60008060006060848603121561058057600080fd5b835192506020840151915060408401519050925092509256fea2646970667358221220e64749fe7b8d7ab896cc1bac129dfeeb1a31992b1bfe5a3c3178309f56d568b664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}